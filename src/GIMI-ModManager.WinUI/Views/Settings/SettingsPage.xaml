<Page
    x:Class="GIMI_ModManager.WinUI.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:GIMI_ModManager.WinUI.Views.Controls"
    xmlns:controls1="using:CommunityToolkit.WinUI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:l="using:WinUI3Localizer"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI.UI"
    xmlns:viewModels="using:GIMI_ModManager.WinUI.ViewModels"
    xmlns:xaml="using:Microsoft.UI.Xaml"
    xmlns:xaml1="using:GIMI_ModManager.WinUI.Helpers.Xaml"
    mc:Ignorable="d">
    <Page.Resources>
        <xaml1:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <xaml1:BoolToVisibleConverter x:Key="BoolToVisibleConverter" />
    </Page.Resources>
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="48" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  Only the  "ContentDialog.ContentTemplate" xaml markup i used  -->
        <ContentDialog x:Name="ExportDialog" l:Uids.Uid="Settings_ExportDialogButtons">
            <ContentDialog.ContentTemplate>
                <DataTemplate x:DataType="viewModels:ExportModsDialogModel">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <!--<RowDefinition Height="*" />
                            <RowDefinition />-->
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <TextBlock
                            IsTextSelectionEnabled="True"
                            TextWrapping="WrapWholeWords"
                            Text="This will export all mods that JASM is managing to an export folder of your choice. The mods will be copied to the export folder and will not be removed from the original folder."
                            l:Uids.Uid="Settings_ExportDialog" />

                        <StackPanel
                            Grid.Row="1"
                            Orientation="Horizontal"
                            ToolTipService.ToolTip="Keeps the jasm mod folder structure. I.e. Characters/Diluc/SomeDilucSkinMod">
                            <CheckBox IsChecked="{x:Bind KeepFolderStructure, Mode=TwoWay}" />
                            <TextBlock
                                IsTextSelectionEnabled="True"
                                TextWrapping="WrapWholeWords"
                                Text="Keep folder structure of CharacterName/Mods in export folder"
                                l:Uids.Uid="Settings_ExportDialog_KeepStructure" />
                        </StackPanel>
                        <StackPanel
                            Grid.Row="2"
                            Orientation="Horizontal"
                            ToolTipService.ToolTip="This is recursive and removes all files AND folders starting with .JASM_">
                            <CheckBox IsChecked="{x:Bind RemoveJasmSettings, Mode=TwoWay}" />
                            <TextBlock
                                IsTextSelectionEnabled="True"
                                Text="Removes JASM configuration files from the exported Mods"
                                l:Uids.Uid="Settings_ExportDialog_RemoveJasm" />
                        </StackPanel>

                        <StackPanel
                            Grid.Row="3"
                            Orientation="Horizontal"
                            ToolTipService.ToolTip="Whether to prepend or remove the 'DISABLED_' prefix from the exported mods">
                            <ComboBox ItemsSource="{x:Bind SetModStatuses, Mode=TwoWay}" SelectedItem="{x:Bind SetModStatus, Mode=TwoWay}" />
                            <TextBlock
                                VerticalAlignment="Center"
                                IsTextSelectionEnabled="True"
                                Text="Change status of exported mods"
                                l:Uids.Uid="Settings_ExportDialog_ChangeStatus" />
                        </StackPanel>

                    </Grid>
                </DataTemplate>
            </ContentDialog.ContentTemplate>
        </ContentDialog>

        <TextBlock
            Grid.Row="0"
            Style="{StaticResource PageTitleStyle}"
            Text="Settings"
            l:Uids.Uid="Settings_Title" />
        <ScrollViewer Grid.Row="1">
            <StackPanel x:Name="ContentArea">
                <TextBlock
                    Style="{ThemeResource SubtitleTextBlockStyle}"
                    Text="Personalization"
                    l:Uids.Uid="Settings_Personalization" />
                <StackPanel Margin="{StaticResource SmallTopBottomMargin}">
                    <TextBlock Text="Theme" l:Uids.Uid="Settings_Theme" />

                    <StackPanel Margin="{StaticResource XSmallTopMargin}">
                        <RadioButton
                            Command="{x:Bind ViewModel.SwitchThemeCommand}"
                            Content="Light"
                            FontSize="15"
                            GroupName="AppTheme"
                            IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Light, Mode=OneWay}"
                            l:Uids.Uid="Settings_Theme_Light">
                            <RadioButton.CommandParameter>
                                <xaml:ElementTheme>Light</xaml:ElementTheme>
                            </RadioButton.CommandParameter>
                        </RadioButton>
                        <RadioButton
                            Command="{x:Bind ViewModel.SwitchThemeCommand}"
                            Content="Dark"
                            FontSize="15"
                            GroupName="AppTheme"
                            IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dark, Mode=OneWay}"
                            l:Uids.Uid="Settings_Theme_Dark">
                            <RadioButton.CommandParameter>
                                <xaml:ElementTheme>Dark</xaml:ElementTheme>
                            </RadioButton.CommandParameter>
                        </RadioButton>
                        <RadioButton
                            Command="{x:Bind ViewModel.SwitchThemeCommand}"
                            Content="Default"
                            FontSize="15"
                            GroupName="AppTheme"
                            IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Default, Mode=OneWay}"
                            l:Uids.Uid="Settings_Theme_Default">
                            <RadioButton.CommandParameter>
                                <xaml:ElementTheme>Default</xaml:ElementTheme>
                            </RadioButton.CommandParameter>
                        </RadioButton>
                    </StackPanel>

                    <StackPanel Margin="0,8,0,0">
                        <TextBlock Text="Window" />
                        <CheckBox
                            Command="{x:Bind ViewModel.WindowSizePositionToggleCommand}"
                            CommandParameter="size"
                            Content="Remember window size"
                            IsChecked="{x:Bind ViewModel.PersistWindowSize, Mode=OneWay}"
                            ToolTipService.ToolTip="If checked then the main window size is saved when JASM exits" />
                        <CheckBox
                            Command="{x:Bind ViewModel.WindowSizePositionToggleCommand}"
                            CommandParameter="position"
                            Content="Remember window position"
                            IsChecked="{x:Bind ViewModel.PersistWindowPosition, Mode=OneWay}"
                            ToolTipService.ToolTip="If checked then the main window position is saved when JASM exits" />
                    </StackPanel>

                </StackPanel>

                <TextBlock
                    Style="{ThemeResource SubtitleTextBlockStyle}"
                    Text="Language"
                    l:Uids.Uid="/Settings/LanguageSelectionSectionHeader" />
                <StackPanel Margin="{StaticResource SmallTopBottomMargin}">
                    <TextBlock
                        Margin="0,0,0,8"
                        TextWrapping="WrapWholeWords"
                        Text="Language options are currently limited. It is a work in progress."
                        l:Uids.Uid="/Settings/LanguageSelectorTitle" />

                    <ComboBox
                        x:Name="LanguageSelectorComboBox"
                        Header="Select Display Language:"
                        ItemsSource="{x:Bind ViewModel.Languages, Mode=TwoWay}"
                        SelectedItem="{x:Bind ViewModel.SelectedLanguage, Mode=TwoWay}"
                        SelectionChanged="LanguageSelectorComboBox_OnSelectionChanged"
                        l:Uids.Uid="/Settings/LanguageSelectorComboBox" />
                </StackPanel>


                <TextBlock
                    Style="{ThemeResource SubtitleTextBlockStyle}"
                    Text="Game"
                    l:Uids.Uid="/Settings/GameSelectorSectionHeader" />
                <StackPanel Margin="{StaticResource SmallTopBottomMargin}">
                    <TextBlock
                        IsTextSelectionEnabled="True"
                        TextWrapping="WrapWholeWords"
                        Text="JASM supports Genshin Impact, Honkai Star Rail, Wuthering Waves and Zenless Zone Zero."
                        l:Uids.Uid="/Settings/GameSelectorTitle" />
                    <TextBlock
                        Margin="0,0,0,8"
                        IsTextSelectionEnabled="True"
                        Text="Settings are saved independently for each selected game." />

                    <ComboBox
                        x:Name="GameSelectorComboBox"
                        Header="Selected Game:"
                        ItemsSource="{x:Bind ViewModel.Games}"
                        SelectedItem="{x:Bind ViewModel.SelectedGame, Mode=TwoWay}"
                        SelectionChanged="GameSelectorComboBox_OnSelectionChanged"
                        l:Uids.Uid="/Settings/GameSelectorComboBox" />
                </StackPanel>

                <TextBlock
                    Style="{ThemeResource SubtitleTextBlockStyle}"
                    Text="Elevator Process"
                    l:Uids.Uid="/Settings/ElevatorSectionHeader" />
                <StackPanel Margin="{StaticResource SmallTopBottomMargin}">
                    <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                        <TextBlock
                            Margin="0,0,8,0"
                            VerticalAlignment="Center"
                            IsTextSelectionEnabled="True"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="Elevator Status:"
                            l:Uids.Uid="/Settings/ElevatorStatusTitle" />
                        <Border
                            Background="{ThemeResource ControlAltFillColorDisabledBrush}"
                            BorderBrush="{ThemeResource ControlAltFillColorDisabledBrush}"
                            BorderThickness="8"
                            CornerRadius="4">
                            <TextBlock
                                VerticalAlignment="Center"
                                Style="{ThemeResource BodyTextBlockStyle}"
                                Text="{x:Bind ViewModel.ElevatorService.ElevatorStatus, Mode=OneWay}" />
                        </Border>
                    </StackPanel>

                    <Button
                        Margin="0,4,0,0"
                        Command="{x:Bind ViewModel.StartElevatorCommand}"
                        Content="Start Elevator Process..."
                        l:Uids.Uid="/Settings/StartElevatorButton" />
                </StackPanel>

                <TextBlock
                    Style="{ThemeResource SubtitleTextBlockStyle}"
                    Text="Mod Update Checker"
                    l:Uids.Uid="/Settings/ModUpdateCheckerSectionHeader" />
                <StackPanel Margin="{StaticResource SmallTopBottomMargin}">
                    <StackPanel Orientation="Horizontal">
                        <CheckBox
                            Command="{x:Bind ViewModel.ToggleModUpdateCheckerCommand}"
                            Content="Mod Auto Update Checker:"
                            IsChecked="{x:Bind ViewModel.IsModUpdateCheckerEnabled, Mode=OneWay}"
                            l:Uids.Uid="/Settings/ModUpdateCheckerCheckBox" />
                        <TextBlock
                            Margin="8,0,0,0"
                            Padding="0,0,0,4"
                            VerticalAlignment="Center"
                            IsTextSelectionEnabled="True"
                            Text="{x:Bind ViewModel.ModCheckerStatus, Mode=OneWay}" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            VerticalAlignment="Center"
                            IsTextSelectionEnabled="True"
                            Text="Next Check at: "
                            l:Uids.Uid="/Settings/ModUpdateCheckerNextText" />
                        <TextBlock Margin="8,0,0,0" Text="{x:Bind ViewModel.NextModCheckTime, Mode=OneWay}" />
                    </StackPanel>

                    <TextBlock
                        Margin="0,8"
                        VerticalAlignment="Center"
                        IsTextSelectionEnabled="True"
                        TextWrapping="WrapWholeWords"
                        Text="The Mod Update Checker checks for updates on startup and periodically in the background, only support for GameBanana.&#x0a;Does a check every 30 minutes when enabled, however, it only checks mods that have not been checked in at least 15 minutes.&#x0a;Manually checking for updates always checks GameBanana directly"
                        l:Uids.Uid="/Settings/ModUpdateCheckerDescription" />

                </StackPanel>

                <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="Commands" />
                <controls1:SettingsCard
                    Command="{x:Bind ViewModel.NavigateToCommandsSettingsCommand}"
                    Description="Commands (scripts) can be defined and then be run on specified mods"
                    Header="Create Custom Commands"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE716;}"
                    IsClickEnabled="True" />


                <TextBlock
                    Style="{ThemeResource SubtitleTextBlockStyle}"
                    Text="Folders"
                    l:Uids.Uid="/Settings/FolderSectionHeader" />
                <StackPanel Margin="{StaticResource SmallTopBottomMargin}">



                    <controls:FolderSelector
                        Title="3Dmigoto Folder"
                        Margin="4,8,4,8"
                        BrowseCommand="{x:Bind ViewModel.BrowseGimiFolderCommand}"
                        PathChangedEvent="GimiFolder_OnPathChangedEvent"
                        SelectedFolderValue="{x:Bind ViewModel.PathToGIMIFolderPicker.Path, Mode=TwoWay}"
                        ValidationErrorText="{x:Bind ViewModel.PathToGIMIFolderPicker.ValidationMessages, Mode=OneWay}"
                        l:Uids.Uid="/Settings/3dmigotoFolderSelector" />
                    <controls:FolderSelector
                        Title="Mods Folder"
                        BrowseCommand="{x:Bind ViewModel.BrowseModsFolderCommand}"
                        PathChangedEvent="ModsFolder_OnPathChangedEvent"
                        SelectedFolderValue="{x:Bind ViewModel.PathToModsFolderPicker.Path, Mode=TwoWay}"
                        ValidationErrorText="{x:Bind ViewModel.PathToModsFolderPicker.ValidationMessages, Mode=OneWay}"
                        l:Uids.Uid="/Settings/ModsFolderSelector" />

                    <StackPanel Orientation="Horizontal">
                        <Button Command="{x:Bind ViewModel.SaveSettingsCommand}" ToolTipService.ToolTip="Update folder path(s)?">Update</Button>
                        <Button
                            Margin="40,0,0,0"
                            Command="{x:Bind ViewModel.ReorganizeModsCommand}"
                            Content="Reorganize Mods" />
                        <Button
                            Margin="40,0,0,0"
                            Command="{x:Bind ViewModel.ShowCleanModsFolderDialogCommand}"
                            Content="Clean Mods folder" />
                    </StackPanel>

                    <StackPanel Margin="0,16,0,0" Orientation="Horizontal">
                        <Button
                            Margin="0,0,8,0"
                            Command="{x:Bind ViewModel.Reset3DmigotoPathCommand}"
                            Content="Reset 3Dmigoto Exe Path">
                            <ToolTipService.ToolTip>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock TextWrapping="WrapWholeWords" Text="{x:Bind ViewModel.ThreeDMigtoProcessManager.ProcessPath, Mode=OneWay}" />
                                </StackPanel>
                            </ToolTipService.ToolTip>
                        </Button>
                        <Button Command="{x:Bind ViewModel.ResetGenshinExePathCommand}" Content="Reset Genshin Exe Path">
                            <ToolTipService.ToolTip>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock TextWrapping="WrapWholeWords" Text="{x:Bind ViewModel.GenshinProcessManager.ProcessPath, Mode=OneWay}" />
                                </StackPanel>
                            </ToolTipService.ToolTip>
                        </Button>
                    </StackPanel>


                    <StackPanel Margin="0,16,0,0" Orientation="Horizontal">
                        <CheckBox
                            Command="{x:Bind ViewModel.ToggleCharacterSkinsAsCharactersCommand}"
                            Content="Treat Character Skins as separate characters"
                            IsChecked="{x:Bind ViewModel.CharacterAsSkinsCheckbox, Mode=TwoWay}" />
                    </StackPanel>

                    <StackPanel Margin="0,16,0,0" Spacing="8">
                        <TextBlock
                            MaxWidth="600"
                            HorizontalAlignment="Left"
                            IsTextSelectionEnabled="True"
                            TextWrapping="WrapWholeWords"
                            Text="When using JASM to download mods, it automatically caches the archives or zip files. You can specify a maximum limit in gigabytes for the cache directory, and JASM will keep the cache size under the limit when starting up." />

                        <StackPanel Orientation="Horizontal" Spacing="16">

                            <Slider
                                x:Name="LocalCacheSlider"
                                Width="200"
                                ValueChanged="LocalCacheSlider_OnValueChanged"
                                Value="{x:Bind ViewModel.MaxCacheLimit, Mode=OneWay}" />
                            <TextBlock VerticalAlignment="Center" Text="{x:Bind ViewModel.MaxCacheSizeString, Mode=OneWay}" />
                        </StackPanel>
                    </StackPanel>

                </StackPanel>

                <TextBlock
                    Style="{ThemeResource SubtitleTextBlockStyle}"
                    Text="Export/Backup Mods"
                    l:Uids.Uid="Settings_Export_Title" />

                <StackPanel Margin="{StaticResource SmallTopBottomMargin}" Orientation="Horizontal">
                    <Button Command="{x:Bind ViewModel.ExportModsCommand}" CommandParameter="{x:Bind ExportDialog}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock
                                Margin="0,0,8,0"
                                VerticalAlignment="Center"
                                Text="Export Mods"
                                l:Uids.Uid="Settings_Export_Button" />
                            <FontIcon
                                VerticalAlignment="Bottom"
                                FontSize="16"
                                Glyph="&#xEDE1;" />
                        </StackPanel>

                    </Button>
                    <ProgressRing
                        Margin="12,0"
                        IsActive="{x:Bind ViewModel.ExportingMods, Mode=OneWay}"
                        IsIndeterminate="False"
                        Maximum="100"
                        Value="{x:Bind ViewModel.ExportProgress, Mode=OneWay}" />
                    <TextBlock
                        Margin="0,0,8,0"
                        Visibility="{x:Bind ViewModel.ExportingMods, Mode=OneWay}"
                        Text="{x:Bind ViewModel.ExportProgressText, Mode=OneWay}" />
                    <TextBlock Visibility="{x:Bind ViewModel.ExportingMods, Mode=OneWay}" Text="{x:Bind ViewModel.CurrentModName, Mode=OneWay}" />
                </StackPanel>


                <TextBlock
                    Style="{ThemeResource SubtitleTextBlockStyle}"
                    Text="About this application"
                    l:Uids.Uid="Settings_About" />
                <StackPanel Margin="{StaticResource XSmallTopMargin}">
                    <TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="{x:Bind ViewModel.VersionDescription, Mode=OneWay}" />

                    <TextBlock
                        Margin="{StaticResource XSmallTopMargin}"
                        Style="{ThemeResource BodyTextBlockStyle}"
                        Text="The goal of JASM is to make it easy to organize a larger amount of skin mods"
                        l:Uids.Uid="Settings_AboutDescription" />
                    <HyperlinkButton
                        Margin="{StaticResource SettingsPageHyperlinkButtonMargin}"
                        Content="Just Another Skin Manager Github"
                        NavigateUri="https://github.com/Jorixon/JASM" />
                    <HyperlinkButton
                        Margin="{StaticResource SettingsPageHyperlinkButtonMargin}"
                        Content="Just Another Skin Manager GameBanana"
                        NavigateUri="https://gamebanana.com/tools/14574" />

                    <StackPanel Orientation="Horizontal" Visibility="{x:Bind ViewModel.ShowNewVersionAvailable, Mode=OneWay, Converter={StaticResource BoolToVisibleConverter}}">
                        <TextBlock VerticalAlignment="Center" Text="New Update Available on GitHub:" />
                        <TextBlock
                            Margin="8,0"
                            VerticalAlignment="Center"
                            Text="{x:Bind ViewModel.LatestVersion, Mode=OneWay}" />
                    </StackPanel>

                    <StackPanel Margin="0,16,0,16" Orientation="Horizontal">
                        <Button
                            Margin="0,0,20,0"
                            VerticalAlignment="Center"
                            Background="{ThemeResource AccentFillColorSelectedTextBackgroundBrush}"
                            Visibility="{x:Bind ViewModel.ShowNewVersionAvailable, Mode=OneWay, Converter={StaticResource BoolToVisibleConverter}}">
                            <Button.Flyout>
                                <Flyout ShouldConstrainToRootBounds="False">
                                    <StackPanel>
                                        <TextBlock TextWrapping="WrapWholeWords" Text="JASM will exit and the update will start. Do you want to continue?" />
                                        <Button Command="{x:Bind ViewModel.UpdateJasmCommand}" Content="Yes, Update JASM 😎" />
                                    </StackPanel>
                                </Flyout>
                            </Button.Flyout>
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock VerticalAlignment="Center" Text="Update JASM to " />
                                    <TextBlock
                                        Margin="4,0"
                                        VerticalAlignment="Center"
                                        Text="{x:Bind ViewModel.LatestVersion, Mode=OneWay}" />
                                    <FontIcon Glyph="&#xE896;" />
                                </StackPanel>
                            </Button.Content>
                        </Button>

                        <Button
                            VerticalAlignment="Center"
                            Command="{x:Bind ViewModel.IgnoreNewVersionCommand}"
                            Content="Ignore Current Update?"
                            Visibility="{x:Bind ViewModel.ShowNewVersionAvailable, Mode=OneWay, Converter={StaticResource BoolToVisibleConverter}}" />
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>

    </Grid>
</Page>
